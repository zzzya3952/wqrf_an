{"remainingRequest":"E:\\Automation\\wqrf_an\\vue_project\\node_modules\\babel-loader\\lib\\index.js!E:\\Automation\\wqrf_an\\vue_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Automation\\wqrf_an\\vue_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Automation\\wqrf_an\\vue_project\\src\\components\\Device.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Automation\\wqrf_an\\vue_project\\src\\components\\Device.vue","mtime":1648652798610},{"path":"E:\\Automation\\wqrf_an\\vue_project\\babel.config.js","mtime":1648644252599},{"path":"E:\\Automation\\wqrf_an\\vue_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648644241915},{"path":"E:\\Automation\\wqrf_an\\vue_project\\node_modules\\babel-loader\\lib\\index.js","mtime":1648644242425},{"path":"E:\\Automation\\wqrf_an\\vue_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648644241915},{"path":"E:\\Automation\\wqrf_an\\vue_project\\node_modules\\vue-loader\\lib\\index.js","mtime":1648644243055}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      device_list: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios({\n      url: \"http://localhost:8000/get_devices/\"\n    }).then(function (res) {\n      _this.device_list = res.data.data;\n    });\n  },\n  methods: {\n    getColor: function getColor(state) {\n      if (state == '空闲中') {\n        return 'green';\n      } else {\n        return 'red';\n      }\n    },\n    fix: function fix() {\n      var _this2 = this;\n\n      if (confirm('当adb devices发现手机未授权，且不弹出授权窗口情况下，才可以使用此功能\\n注意！此功能会导致adb重启，使所有设备重连，所以请确保无其他设备正在执行任务！') == false) {\n        axios.get('/fix_devices/').then(function (res) {\n          alert('重新授权成功');\n          _this2.device_list = res.data.data;\n        });\n      }\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA;AAEA;AACAA,MADA,kBACA;AACA;AACAC;AADA;AAGA,GALA;AAOAC;AAAA;;AACAC;AAAAC;AAAA;AACA;AACA,KAFA;AAGA,GAXA;AAaAC;AACAC,YADA,oBACAC,KADA,EACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAPA;AASAC,OATA,iBASA;AAAA;;AACA;AACAL;AACAM;AACA;AACA,SAHA;AAIA;AACA;AAhBA;AAbA","names":["data","device_list","mounted","axios","url","methods","getColor","state","fix","alert"],"sourceRoot":"src/components","sources":["Device.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-group list-group-checkable\">\r\n    <div v-for=\"(d,index) in device_list\">\r\n      <input @click=\"cd(d.name,d.id)\" class=\"list-group-item-check\" type=\"radio\" :id=\"'device_'+d.id\"\r\n             name=\"listGroupCheckableRadios\">\r\n      <label class=\"list-group-item py-3\" :style=\"{borderColor:getColor(d.state)}\" :for=\"'device_'+d.id\">\r\n        {{ d.id }} . {{ d.name }}\r\n        <span class=\"small opacity-50\">\r\n                    系统版本：{{ d.pla }} &#12288; 当前状态：{{ d.state }} &#12288; UDID：{{ d.udid }}\r\n                </span>\r\n      </label>\r\n    </div>\r\n    <div class=\"btn-group\">\r\n      <button @click=\"fix()\" type=\"button\" class=\"btn btn-sm btn-outline-dark\">重新授权</button>\r\n      <button onclick=\"alert('请手动检查设备数据线,开发者模式开关等情况！')\" type=\"button\" class=\"btn btn-sm btn-outline-dark\">重新链接</button>\r\n      <button onclick=\"window.open('/admin/myapp/db_devices/')\" type=\"button\" class=\"btn btn-sm btn-outline-dark\">管理设备\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      device_list: []\r\n    }\r\n  },\r\n\r\n  mounted: function () {\r\n    axios({url: \"http://localhost:8000/get_devices/\"}).then(res => {\r\n      this.device_list = res.data.data\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    getColor(state) {\r\n      if (state == '空闲中') {\r\n        return 'green'\r\n      } else {\r\n        return 'red'\r\n      }\r\n    },\r\n\r\n    fix() {\r\n      if (confirm('当adb devices发现手机未授权，且不弹出授权窗口情况下，才可以使用此功能\\n注意！此功能会导致adb重启，使所有设备重连，所以请确保无其他设备正在执行任务！') == false) {\r\n        axios.get('/fix_devices/').then(res => {\r\n          alert('重新授权成功');\r\n          this.device_list = res.data.data\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nlabel {\r\n  border: 2px solid black;\r\n  border-radius: 5px;\r\n}\r\n</style>"]}]}